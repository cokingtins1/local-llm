generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector, uuidOssp(map: "uuid-ossp")]
}

model DocumentChunks {
  id       String                      @id @default(uuid())
  chunkId  String?
  content  String?
  metadata Json?
  vector   Unsupported("vector(768)")?
}

model ChatSession {
  id         String   @id @default(uuid())
  name       String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @updatedAt @db.Timestamptz(6)

  // Relations
  prompts   ChatPrompt[]
  responses ChatResponse[]

  @@map("chat_session")
}

model ChatPrompt {
  id         String   @id @default(uuid())
  prompt     String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  session_id String // Foreign key

  // Relations
  session   ChatSession    @relation(fields: [session_id], references: [id], onDelete: Cascade)
  responses ChatResponse[]

  @@map("chat_prompt")
}

model ChatResponse {
  id         String   @id @default(uuid())
  response   String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  session_id String // Foreign key
  prompt_id  String? // Optional link to specific prompt

  // Relations
  session ChatSession @relation(fields: [session_id], references: [id], onDelete: Cascade)
  prompt  ChatPrompt? @relation(fields: [prompt_id], references: [id])

  @@map("chat_response")
}
